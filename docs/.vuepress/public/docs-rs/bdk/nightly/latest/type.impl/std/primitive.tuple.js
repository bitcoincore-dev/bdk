(function() {var type_impls = {
"bdk_chain":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBlockId%3E-for-(u32,+BlockHash)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bdk_chain/chain_data.rs.html#133-137\">source</a><a href=\"#impl-From%3CBlockId%3E-for-(u32,+BlockHash)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"bdk_chain/struct.BlockId.html\" title=\"struct bdk_chain::BlockId\">BlockId</a>&gt; for (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, BlockHash)</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bdk_chain/chain_data.rs.html#134-136\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(block_id: <a class=\"struct\" href=\"bdk_chain/struct.BlockId.html\" title=\"struct bdk_chain::BlockId\">BlockId</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BlockId>","bdk_chain::Indexed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Merge-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bdk_chain/tx_data_traits.rs.html#185\">source</a><a href=\"#impl-Merge-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"bdk_chain/trait.Merge.html\" title=\"trait bdk_chain::Merge\">Merge</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bdk_chain/trait.Merge.html\" title=\"trait bdk_chain::Merge\">Merge</a>,\n    T1: <a class=\"trait\" href=\"bdk_chain/trait.Merge.html\" title=\"trait bdk_chain::Merge\">Merge</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bdk_chain/tx_data_traits.rs.html#185\">source</a><a href=\"#method.merge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bdk_chain/trait.Merge.html#tymethod.merge\" class=\"fn\">merge</a>(&amp;mut self, _other: Self)</h4></section></summary><div class='docblock'>Merge another object of the same type onto <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bdk_chain/tx_data_traits.rs.html#185\">source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bdk_chain/trait.Merge.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether the structure is considered empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bdk_chain/tx_data_traits.rs.html#125-131\">source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bdk_chain/trait.Merge.html#method.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Take the value, replacing it with the default value.</div></details></div></details>","Merge","bdk_chain::Indexed","bdk_chain::KeychainIndexed"]],
"bdk_wallet":[],
"example_bitcoind_rpc_polling":[],
"example_cli":[],
"example_electrum":[],
"example_esplora":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()